{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: 'lineEcharts',\n  props: {\n    typeCharts: {\n      type: String,\n      default: 'line'\n    }\n  },\n  data() {\n    return {};\n  },\n  mounted() {\n    this.lineEcharts();\n    // this.initWebsocket()\n  },\n\n  methods: {\n    lineEcharts() {\n      // 基于准备好的dom，初始化echarts实例\n      var myChart = echarts.init(document.getElementById('min11'));\n\n      // 指定图表的配置项和数据\n      var option = {\n        backgroundColor: '#000',\n        globe: {\n          baseTexture: ROOT_PATH + '/data-gl/asset/earth.jpg',\n          heightTexture: ROOT_PATH + '/data-gl/asset/bathymetry_bw_composite_4k.jpg',\n          displacementScale: 0.1,\n          shading: 'lambert',\n          environment: ROOT_PATH + '/data-gl/asset/starfield.jpg',\n          light: {\n            ambient: {\n              intensity: 0.1\n            },\n            main: {\n              intensity: 1.5\n            }\n          },\n          layers: [{\n            type: 'blend',\n            blendTo: 'emission',\n            texture: ROOT_PATH + '/data-gl/asset/night.jpg'\n          }, {\n            type: 'overlay',\n            texture: ROOT_PATH + '/data-gl/asset/clouds.png',\n            shading: 'lambert',\n            distance: 5\n          }]\n        },\n        series: []\n      };\n\n      // 使用刚指定的配置项和数据显示图表。\n      myChart.setOption(option);\n    }\n    // 客户端与服务端连接\n    // initWebsocket () {\n    //   const ws = new WebSocket('ws://127.0.0.1:8090')\n    //   console.log(ws)\n    //   // 成功回调\n    //   ws.onopen = function () {\n    //     alert('WebSocket连接成功')\n    //   }\n    //   // 错误回调\n    //   ws.onerror = function () {\n    //     alert('api接口失效失败')\n    //   }\n    //   // 接收消息\n    //   ws.onmessage = function (msg) {\n    //     alert(msg)\n    //   }\n    // }\n  }\n};","map":{"version":3,"mappings":"AAKA;AACA;EACAA;EACAC;IACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA,QAEA;EACA;EACAC;IACA;IACA;EACA;;EACAC;IACAC;MACA;MACA;;MAEA;MACA;QACAC;QACAC;UACAC;UACAC;UACAC;UACAC;UACAC;UACAC;YACAC;cACAC;YACA;YACAC;cACAD;YACA;UACA;UACAE,SACA;YACAjB;YACAkB;YACAC;UACA,GACA;YACAnB;YACAmB;YACAR;YACAS;UACA;QAEA;QACAC;MACA;;MAEA;MACAC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;AACA","names":["name","props","typeCharts","type","default","data","mounted","methods","lineEcharts","backgroundColor","globe","baseTexture","heightTexture","displacementScale","shading","environment","light","ambient","intensity","main","layers","blendTo","texture","distance","series","myChart"],"sourceRoot":"src/views/apacheEcharts","sources":["index.vue"],"sourcesContent":["<template>\r\n  <div id=\"min11\" style=\"width: 100%;height:110%;\"></div>\r\n</template>\r\n\r\n<script>\r\nimport *as echarts from 'echarts'\r\nexport default {\r\n  name: 'lineEcharts',\r\n  props: {\r\n    typeCharts: {\r\n      type: String,\r\n      default: 'line'\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n\r\n    }\r\n  },\r\n  mounted () {\r\n    this.lineEcharts()\r\n    // this.initWebsocket()\r\n  },\r\n  methods: {\r\n    lineEcharts () {\r\n      // 基于准备好的dom，初始化echarts实例\r\n      var myChart = echarts.init(document.getElementById('min11'));\r\n\r\n      // 指定图表的配置项和数据\r\n      var option = {\r\n        backgroundColor: '#000',\r\n        globe: {\r\n          baseTexture: ROOT_PATH + '/data-gl/asset/earth.jpg',\r\n          heightTexture: ROOT_PATH + '/data-gl/asset/bathymetry_bw_composite_4k.jpg',\r\n          displacementScale: 0.1,\r\n          shading: 'lambert',\r\n          environment: ROOT_PATH + '/data-gl/asset/starfield.jpg',\r\n          light: {\r\n            ambient: {\r\n              intensity: 0.1\r\n            },\r\n            main: {\r\n              intensity: 1.5\r\n            }\r\n          },\r\n          layers: [\r\n            {\r\n              type: 'blend',\r\n              blendTo: 'emission',\r\n              texture: ROOT_PATH + '/data-gl/asset/night.jpg'\r\n            },\r\n            {\r\n              type: 'overlay',\r\n              texture: ROOT_PATH + '/data-gl/asset/clouds.png',\r\n              shading: 'lambert',\r\n              distance: 5\r\n            }\r\n          ]\r\n        },\r\n        series: []\r\n      };\r\n\r\n      // 使用刚指定的配置项和数据显示图表。\r\n      myChart.setOption(option);\r\n    },\r\n    // 客户端与服务端连接\r\n    // initWebsocket () {\r\n    //   const ws = new WebSocket('ws://127.0.0.1:8090')\r\n    //   console.log(ws)\r\n    //   // 成功回调\r\n    //   ws.onopen = function () {\r\n    //     alert('WebSocket连接成功')\r\n    //   }\r\n    //   // 错误回调\r\n    //   ws.onerror = function () {\r\n    //     alert('api接口失效失败')\r\n    //   }\r\n    //   // 接收消息\r\n    //   ws.onmessage = function (msg) {\r\n    //     alert(msg)\r\n    //   }\r\n    // }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}