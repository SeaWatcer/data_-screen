{"ast":null,"code":"import { uuid } from '../../../util/index';\nimport autoResize from '../../../mixin/autoResize';\nimport Charts from '@jiaminghi/charts';\nexport default {\n  name: 'DvCharts',\n  mixins: [autoResize],\n  props: {\n    option: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data() {\n    const id = uuid();\n    return {\n      ref: `charts-container-${id}`,\n      chartRef: `chart-${id}`,\n      chart: null\n    };\n  },\n  watch: {\n    option() {\n      let {\n        chart,\n        option\n      } = this;\n      if (!chart) return;\n      if (!option) option = {};\n      chart.setOption(option, true);\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit() {\n      const {\n        initChart\n      } = this;\n      initChart();\n    },\n    initChart() {\n      const {\n        $refs,\n        chartRef,\n        option\n      } = this;\n      const chart = this.chart = new Charts($refs[chartRef]);\n      if (!option) return;\n      chart.setOption(option);\n    },\n    onResize() {\n      const {\n        chart\n      } = this;\n      if (!chart) return;\n      chart.resize();\n    }\n  }\n};","map":{"version":3,"mappings":"AAOA;AAEA;AAEA;AAEA;EACAA;EACAC;EACAC;IACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;IACA;MACAC;MACAC;MAEAC;IACA;EACA;EACAC;IACAP;MACA;QAAAM;QAAAN;MAAA;MAEA;MAEA;MAEAM;IACA;EACA;EACAE;IACAC;MACA;QAAAC;MAAA;MAEAA;IACA;IACAA;MACA;QAAAC;QAAAN;QAAAL;MAAA;MAEA;MAEA;MAEAM;IACA;IACAM;MACA;QAAAN;MAAA;MAEA;MAEAA;IACA;EACA;AACA","names":["name","mixins","props","option","type","default","data","ref","chartRef","chart","watch","methods","afterAutoResizeMixinInit","initChart","$refs","onResize"],"sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/charts/src","sources":["main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-charts-container\" :ref=\"ref\">\n    <div class=\"charts-canvas-container\" :ref=\"chartRef\" />\n  </div>\n</template>\n\n<script>\nimport { uuid } from '../../../util/index'\n\nimport autoResize from '../../../mixin/autoResize'\n\nimport Charts from '@jiaminghi/charts'\n\nexport default {\n  name: 'DvCharts',\n  mixins: [autoResize],\n  props: {\n    option: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    const id = uuid()\n    return {\n      ref: `charts-container-${id}`,\n      chartRef: `chart-${id}`,\n\n      chart: null\n    }\n  },\n  watch: {\n    option () {\n      let { chart, option } = this\n\n      if (!chart) return\n\n      if (!option) option = {}\n\n      chart.setOption(option, true)\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { initChart } = this\n\n      initChart()\n    },\n    initChart () {\n      const { $refs, chartRef, option } = this\n\n      const chart = this.chart = new Charts($refs[chartRef])\n\n      if (!option) return\n\n      chart.setOption(option)\n    },\n    onResize () {\n      const { chart } = this\n\n      if (!chart) return\n\n      chart.resize()\n    }\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}