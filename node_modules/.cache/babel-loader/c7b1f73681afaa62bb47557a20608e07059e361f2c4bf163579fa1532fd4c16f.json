{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: 'lineEcharts',\n  props: {\n    typeCharts: {\n      type: String,\n      default: 'line'\n    }\n  },\n  data() {\n    return {};\n  },\n  mounted() {\n    this.lineEcharts();\n    // this.initWebsocket()\n  },\n\n  methods: {\n    lineEcharts() {\n      // 基于准备好的dom，初始化echarts实例\n      var myChart = echarts.init(document.getElementById('min'));\n\n      // 指定图表的配置项和数据\n      var option = {\n        xAxis: {\n          type: 'category',\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: [820, 932, 901, 934, 1290, 1330, 1320],\n          type: this.typeCharts,\n          smooth: true\n        }]\n      };\n\n      // 使用刚指定的配置项和数据显示图表。\n      myChart.setOption(option);\n    }\n    // 客户端与服务端连接\n    // initWebsocket () {\n    //   const ws = new WebSocket('ws://127.0.0.1:8090')\n    //   console.log(ws)\n    //   // 成功回调\n    //   ws.onopen = function () {\n    //     alert('WebSocket连接成功')\n    //   }\n    //   // 错误回调\n    //   ws.onerror = function () {\n    //     alert('api接口失效失败')\n    //   }\n    //   // 接收消息\n    //   ws.onmessage = function (msg) {\n    //     alert(msg)\n    //   }\n    // }\n  }\n};","map":{"version":3,"mappings":"AAKA;AACA;EACAA;EACAC;IACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA,QAEA;EACA;EACAC;IACA;IACA;EACA;;EACAC;IACAC;MACA;MACA;;MAEA;MACA;QACAC;UACAN;UACAE;QACA;QACAK;UACAP;QACA;QACAQ,SACA;UACAN;UACAF;UACAS;QACA;MAEA;;MAEA;MACAC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;AACA","names":["name","props","typeCharts","type","default","data","mounted","methods","lineEcharts","xAxis","yAxis","series","smooth","myChart"],"sourceRoot":"src/views/lineEcharts","sources":["index.vue"],"sourcesContent":["<template>\r\n  <div id=\"min\" style=\"width: 100%;height:110%;\"></div>\r\n</template>\r\n\r\n<script>\r\nimport *as echarts from 'echarts'\r\nexport default {\r\n  name: 'lineEcharts',\r\n  props: {\r\n    typeCharts: {\r\n      type: String,\r\n      default: 'line'\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n\r\n    }\r\n  },\r\n  mounted () {\r\n    this.lineEcharts()\r\n    // this.initWebsocket()\r\n  },\r\n  methods: {\r\n    lineEcharts () {\r\n      // 基于准备好的dom，初始化echarts实例\r\n      var myChart = echarts.init(document.getElementById('min'));\r\n\r\n      // 指定图表的配置项和数据\r\n      var option = {\r\n        xAxis: {\r\n          type: 'category',\r\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            data: [820, 932, 901, 934, 1290, 1330, 1320],\r\n            type: this.typeCharts,\r\n            smooth: true\r\n          }\r\n        ]\r\n      };\r\n\r\n      // 使用刚指定的配置项和数据显示图表。\r\n      myChart.setOption(option);\r\n    },\r\n    // 客户端与服务端连接\r\n    // initWebsocket () {\r\n    //   const ws = new WebSocket('ws://127.0.0.1:8090')\r\n    //   console.log(ws)\r\n    //   // 成功回调\r\n    //   ws.onopen = function () {\r\n    //     alert('WebSocket连接成功')\r\n    //   }\r\n    //   // 错误回调\r\n    //   ws.onerror = function () {\r\n    //     alert('api接口失效失败')\r\n    //   }\r\n    //   // 接收消息\r\n    //   ws.onmessage = function (msg) {\r\n    //     alert(msg)\r\n    //   }\r\n    // }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}